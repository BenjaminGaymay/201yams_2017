#!/usr/bin/env python3
""" Yams """

import sys
from combi import pair, three, four, full, straight, yams


def print_help(ret):
    """ Displays help """

    print("""
USAGE
        ./201yams d1 d2 d3 d4 d5 c

DESCRIPTION
        d1      value of the first dice (0 if not thrown)
        d2      value of the second dice (0 if not thrown)
        d3      value of the third dice (0 if not thrown)
        d4      value of the fourth dice (0 if not thrown)
        d5      value of the fifth dice (0 if not thrown)
        c       expected combination""")
    return ret


def check_dices(dices):
    """ Checks value of dices """

    if dices.count("0") < 5 and dices.count("0") > 0:
        print("all dices must be thrown", file=sys.stderr)
        return 84
    for index, value in enumerate(dices):
        try:
            if int(value) > 6 or int(value) < 0:
                print("Error: d%d ------" % (index + 1), file=sys.stderr)
                return 84
        except ValueError:
            print("Error: d%d -----" % (index + 1), file=sys.stderr)
            return 84
    return 0


def check_args(argv):
    """ Check args validity """

    if "-h" in argv:
        exit(print_help(0))
    if len(argv) != 6:
        print("Error: Bad args", file=sys.stderr)
        exit(84)

    dices = []
    for arg in argv:
        dices.append(arg)

    tmp = argv[5].split("_")
    if tmp[0] not in OPTIONS.keys():
        print("Error: Bad args", file=sys.stderr)
        exit(84)

    return dices[:-1]


def game_yams(argv):
    """ Yams main function """

    dices = check_args(argv[1:])

    if check_dices(dices) == 84:
        return 84
    combinaison = argv[6].split("_")
    if len(combinaison) == 1 or combinaison.count("") != 0:
        print("Error: bad combination", file=sys.stderr)
    elif combinaison.count("0") != 0:
        print("Error: bad combination", file=sys.stderr)
    elif combinaison[1] < "1" or combinaison[1] > "6":
        print("Error: bad combination", file=sys.stderr)
    else:
        return OPTIONS[combinaison[0]](combinaison, dices)
    return 84


if __name__ == "__main__":
    OPTIONS = {
        "pair": pair,
        "three": three,
        "four": four,
        "full": full,
        "straight": straight,
        "yams": yams
    }
    exit(game_yams(sys.argv))
